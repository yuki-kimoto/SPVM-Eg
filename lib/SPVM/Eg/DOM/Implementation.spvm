# Copyright (c) 2024 Yuki Kimoto
# MIT License

class Eg::DOM::Implementation {
  
  allow Eg::Node::Document;
  allow Eg::Window;
  
  use Eg::Node::Element;
  use Eg::Node::Document::HTML;
  use Eg::Node::Document::XML;
  use Eg::Node::DocumentType;
  
  # Class Methods
  private static method new : Eg::DOM::Implementation () {
    
    my $self = new Eg::DOM::Implementation;
    
    return $self;
  }
  
  # Instance Methods
  method create_document : Eg::Node::Document::XML ($namespace_uri : string, $qualified_name_str : string, $document_type : Eg::Node::DocumentType = undef) {
    
    unless ($qualified_name_str) {
      die "\$qualified_name_str must be defined.";
    }
    
    my $document = Eg::Node::Document::XML->new;
    
    $document->{namespace_uri} = $namespace_uri;
    
    $document->{document_type} = $document_type;
    
    my $root_element = Eg::Node::Element->new;
    
    $root_element->{node_name} = $qualified_name_str;
    
    $document->append_child($root_element);
    
    return $document;
  }
  
  method create_document_type : Eg::Node::DocumentType ($qualified_name_str : string, $public_id : string, $system_id : string) {
    
    my $document_type = Eg::Node::DocumentType->new($qualified_name_str, $public_id, $system_id);
    
    return $document_type;
  }
  
  method create_html_document : Eg::Node::Document::HTML ($title : string = undef) {
    
    my $html_document = Eg::Node::Document::HTML->new($title);
    
    return $html_document;
  }
  
}
