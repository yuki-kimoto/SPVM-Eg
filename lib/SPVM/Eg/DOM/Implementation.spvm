# Copyright (c) 2024 Yuki Kimoto
# MIT License

class Eg::DOM::Implementation {
  
  allow Eg::Node::Document;
  
  use Eg::Node::Document::HTML;
  use Eg::Node::Document::XML;
  use Eg::Node::DocumentType;
  
  has owner_document : Eg::Node::Document;
  
  # Class Methods
  private static method new : Eg::DOM::Implementation ($owner_document : Eg::Node::Document) {
    
    my $self = new Eg::DOM::Implementation;
    
    $self->{owner_document} = $owner_document;
    weaken $self->{owner_document};
    
    return $self;
  }
  
  # Instance Methods
  method create_document : Eg::Node::Document::XML ($namespace_uri : string, $qualified_name_str : string, $document_type : Eg::Node::DocumentType = undef) {
    
    my $xml_document = Eg::Node::Document::XML->new($namespace_uri, $qualified_name_str, $document_type);
    
    return $xml_document;
  }
  
  method create_document_type : Eg::Node::DocumentType ($qualified_name_str : string, $public_id : string, $system_id : string) {
    
    my $document_type = Eg::Node::DocumentType->new($qualified_name_str, $public_id, $system_id);
    
    return $document_type;
  }
  
  method create_html_document : Eg::Node::Document::HTML ($title : string = undef) {
    
    my $html_document = Eg::Node::Document::HTML->new($title);
    
    return $html_document;
  }
  
}
