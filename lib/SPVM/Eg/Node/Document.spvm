# Copyright (c) 2024 Yuki Kimoto
# MIT License

# None in JavaScript
class Eg::Node::Document extends Eg::Node {
  
  # Fields
  has namespace_uri : protected string;
  
  method parent_node : Eg::Node () {
    return undef;
  }
  
  method document_element : Eg::Node::Element () {
    my $root_node = (Eg::Node::Element)$self->first_child;
    
    return $root_node;
  }
  
  method create_text_node : Eg::Node::Text ($node_value : string) {
    
    unless ($node_value) {
      die "\$node_value must be defined.";
    }
    
    my $text_node = Eg::Node::Text->new($node_value);
    
    return $text_node;
  }
  
  method create_comment : Eg::Node::Comment ($node_value : string) {
    
    unless ($node_value) {
      die "\$node_value must be defined.";
    }
    
    my $comment_node = Eg::Node::Comment->new($node_value);
    
    return $comment_node;
  }
  
  method create_element : Eg::Node::Element ($tag_name : string) {
    
    unless ($tag_name) {
      die "\$tag_name must be defined.";
    }
    
    unless (length $tag_name) {
      die "\$tag_name must have its length.";
    }
    
    if (Fn->contains($tag_name, ":")) {
      die "\$tag_name cannot contains \":\"";
    }
    
    my $element = Eg::Node::Element->new;
    
    $element->{tag_name} = $tag_name;
    
    return $element;
  }
  
}
